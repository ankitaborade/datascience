# -*- coding: utf-8 -*-
"""IPL_DATA_ANALYSIS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18YYHihEq1JPCDbwhzMZm_9nKlcYBIKtZ

# IPL mataches data analysis
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np 
import matplotlib.pyplot as plt 
import seaborn as sns 
# %matplotlib inline  
#importing all the required libraries

dataset = pd.read_csv('matches.csv')  #Loading the dataset
dataset.head() # Loading the first 5 rows of the dataset

dataset.shape  #displays the number of rows and coloumn for dataset

dataset.info #shows all the details of dataset

dataset.columns #name of all columns

dataset.isna().any()  #finding out NaN values

dataset.describe()  #statistical descrption of dataset

dataset['id'].count()  #total matches played

dataset['season'].unique() #no. of seasons played

dataset.iloc[dataset['win_by_runs'].idxmax()] #team won max number of matches by runs

dataset.iloc[dataset['win_by_wickets'].idxmax()] #team won max number of matches by wickets

#team won with minimum wickets 
dataset.iloc[dataset['win_by_wickets'].idxmin()]

#season consisted hightest umber of matches 
fig_dims = (20,4)
fig, ax = plt.subplots(figsize = fig_dims)
sns.countplot(x = 'season', ax = ax, data= dataset)
plt.show()

#most successful IPL team
data = dataset.winner.value_counts()
sns.barplot(y = data.index, x = data)

#probability of winning match if you win the toss 
prob_of_win = dataset['toss_winner'] == dataset['winner']
prob_of_win.groupby(prob_of_win).size()

sns.countplot(prob_of_win)

#highest wins by teams per season
dataset.groupby('season')['winner'].value_counts()

#toss decision 
dataset['toss_decision'].value_counts()

#man of the match - high to lowest
dataset['player_of_match'].value_counts()

#city where max nuber of IPL matches played 
dataset['city'].value_counts()